/**
 *
 * 功能描述:
 *
 * @className Keywords
 * @projectName type-iorm
 * @author yanshaowen
 * @date 2019/4/18 11:20
 */
import {IKeyword} from "../IKeyword";
import {Joint} from "./Joint";

export class Keywords {
    public static readonly K_ADD: IKeyword = Joint.keyword("add");
    public static readonly K_ALTER: IKeyword = Joint.keyword("alter");
    public static readonly K_ALTER_COLUMN: IKeyword = Joint.keyword("alter column");
    public static readonly K_ALTER_CONSTRAINT: IKeyword = Joint.keyword("alter constraint");
    public static readonly K_ALTER_INDEX: IKeyword = Joint.keyword("alter index");
    public static readonly K_ALTER_SCHEMA: IKeyword = Joint.keyword("alter schema");
    public static readonly K_ALTER_TABLE: IKeyword = Joint.keyword("alter table");
    public static readonly K_AND: IKeyword = Joint.keyword("and");
    public static readonly K_ARRAY: IKeyword = Joint.keyword("array");
    public static readonly K_AS: IKeyword = Joint.keyword("as");
    public static readonly K_AS_OF: IKeyword = Joint.keyword("as of");
    public static readonly K_ATOMIC: IKeyword = Joint.keyword("atomic");
    public static readonly K_AUTO_INCREMENT: IKeyword = Joint.keyword("auto_increment");
    public static readonly K_AUTOINCREMENT: IKeyword = Joint.keyword("autoincrement");
    public static readonly K_BEGIN: IKeyword = Joint.keyword("begin");
    public static readonly K_BEGIN_CATCH: IKeyword = Joint.keyword("begin catch");
    public static readonly K_BEGIN_TRY: IKeyword = Joint.keyword("begin try");
    public static readonly K_BETWEEN: IKeyword = Joint.keyword("between");
    public static readonly K_BLOB: IKeyword = Joint.keyword("blob");
    public static readonly K_BOOLEAN: IKeyword = Joint.keyword("boolean");
    public static readonly K_BULK_COLLECT_INTO: IKeyword = Joint.keyword("bulk collect into");
    public static readonly K_BY: IKeyword = Joint.keyword("by");
    public static readonly K_CASCADE: IKeyword = Joint.keyword("cascade");
    public static readonly K_CASE: IKeyword = Joint.keyword("case");
    public static readonly K_CAST: IKeyword = Joint.keyword("cast");
    public static readonly K_CATALOG: IKeyword = Joint.keyword("catalog");
    public static readonly K_CHANGE_COLUMN: IKeyword = Joint.keyword("change column");
    public static readonly K_CHECK: IKeyword = Joint.keyword("check");
    public static readonly K_COALESCE: IKeyword = Joint.keyword("coalesce");
    public static readonly K_COLLATE: IKeyword = Joint.keyword("collate");
    public static readonly K_COLLATION: IKeyword = Joint.keyword("collation");
    public static readonly K_COLUMN: IKeyword = Joint.keyword("column");
    public static readonly K_COLUMNS: IKeyword = Joint.keyword("columns");
    public static readonly K_COMMENT: IKeyword = Joint.keyword("comment");
    public static readonly K_CONNECT_BY: IKeyword = Joint.keyword("connect by");
    public static readonly K_CONSTRAINT: IKeyword = Joint.keyword("constraint");
    public static readonly K_CONTINUE_IDENTITY: IKeyword = Joint.keyword("continue identity");
    public static readonly K_CREATE: IKeyword = Joint.keyword("create");
    public static readonly K_CREATE_SCHEMA: IKeyword = Joint.keyword("create schema");
    public static readonly K_CROSS_JOIN_LATERAL: IKeyword = Joint.keyword("cross join lateral");
    public static readonly K_CURRENT_SCHEMA: IKeyword = Joint.keyword("current_schema");
    public static readonly K_CURRENT_ROW: IKeyword = Joint.keyword("current row");
    public static readonly K_DATE: IKeyword = Joint.keyword("date");
    public static readonly K_DATETIME: IKeyword = Joint.keyword("datetime");
    public static readonly K_DATETIMEOFFSET: IKeyword = Joint.keyword("datetimeoffset");
    public static readonly K_DECIMAL: IKeyword = Joint.keyword("decimal");
    public static readonly K_DECLARE: IKeyword = Joint.keyword("declare");
    public static readonly K_DEFAULT: IKeyword = Joint.keyword("default");
    public static readonly K_DEFAULT_VALUES: IKeyword = Joint.keyword("default values");
    public static readonly K_DELETE: IKeyword = Joint.keyword("delete");
    public static readonly K_DELETE_WHERE: IKeyword = Joint.keyword("delete where");
    public static readonly K_DENSE_RANK: IKeyword = Joint.keyword("dense_rank");
    public static readonly K_DISTINCT: IKeyword = Joint.keyword("distinct");
    public static readonly K_DISTINCT_ON: IKeyword = Joint.keyword("distinct on");
    public static readonly K_DO: IKeyword = Joint.keyword("do");
    public static readonly K_DO_NOTHING: IKeyword = Joint.keyword("do nothing");
    public static readonly K_DO_UPDATE: IKeyword = Joint.keyword("do update");
    public static readonly K_DROP: IKeyword = Joint.keyword("drop");
    public static readonly K_DROP_COLUMN: IKeyword = Joint.keyword("drop column");
    public static readonly K_DROP_CONSTRAINT: IKeyword = Joint.keyword("drop constraint");
    public static readonly K_DROP_INDEX: IKeyword = Joint.keyword("drop index");
    public static readonly K_DROP_NOT_NULL: IKeyword = Joint.keyword("drop not null");
    public static readonly K_DROP_SCHEMA: IKeyword = Joint.keyword("drop schema");
    public static readonly K_DROP_TABLE: IKeyword = Joint.keyword("drop table");
    public static readonly K_DROP_VIEW: IKeyword = Joint.keyword("drop view");
    public static readonly K_ELSE: IKeyword = Joint.keyword("else");
    public static readonly K_ELSIF: IKeyword = Joint.keyword("elsif");
    public static readonly K_END: IKeyword = Joint.keyword("end");
    public static readonly K_END_CATCH: IKeyword = Joint.keyword("end catch");
    public static readonly K_END_IF: IKeyword = Joint.keyword("end if");
    public static readonly K_END_LOOP: IKeyword = Joint.keyword("end loop");
    public static readonly K_END_TRY: IKeyword = Joint.keyword("end try");
    public static readonly K_ENUM: IKeyword = Joint.keyword("enum");
    public static readonly K_ESCAPE: IKeyword = Joint.keyword("escape");
    public static readonly K_EXCEPTION: IKeyword = Joint.keyword("exception");
    public static readonly K_EXEC: IKeyword = Joint.keyword("exec");
    public static readonly K_EXECUTE_BLOCK: IKeyword = Joint.keyword("execute block");
    public static readonly K_EXECUTE_IMMEDIATE: IKeyword = Joint.keyword("execute immediate");
    public static readonly K_EXECUTE_STATEMENT: IKeyword = Joint.keyword("execute statement");
    public static readonly K_EXISTS: IKeyword = Joint.keyword("exists");
    public static readonly K_FALSE: IKeyword = Joint.keyword("false");
    public static readonly K_FETCH_FIRST: IKeyword = Joint.keyword("fetch first");
    public static readonly K_FETCH_NEXT: IKeyword = Joint.keyword("fetch next");
    public static readonly K_FILTER: IKeyword = Joint.keyword("filter");
    public static readonly K_FINAL_TABLE: IKeyword = Joint.keyword("final table");
    public static readonly K_FIRST: IKeyword = Joint.keyword("first");
    public static readonly K_FOLLOWING: IKeyword = Joint.keyword("following");
    public static readonly K_FOR: IKeyword = Joint.keyword("for");
    public static readonly K_FORALL: IKeyword = Joint.keyword("forall");
    public static readonly K_FORMAT: IKeyword = Joint.keyword("format");
    public static readonly K_FOR_SHARE: IKeyword = Joint.keyword("for share");
    public static readonly K_FOR_UPDATE: IKeyword = Joint.keyword("for update");
    public static readonly K_FOREIGN_KEY: IKeyword = Joint.keyword("foreign key");
    public static readonly K_FROM: IKeyword = Joint.keyword("from");
    public static readonly K_GENERATED_BY_DEFAULT_AS_IDENTITY: IKeyword = Joint.keyword("generated by default as identity");
    public static readonly K_GLOBAL_TEMPORARY: IKeyword = Joint.keyword("global temporary");
    public static readonly K_GRANT: IKeyword = Joint.keyword("grant");
    public static readonly K_GRANT_OPTION_FOR: IKeyword = Joint.keyword("grant option for");
    public static readonly K_GROUP_BY: IKeyword = Joint.keyword("group by");
    public static readonly K_HAVING: IKeyword = Joint.keyword("having");
    public static readonly K_HOUR_TO_SECOND: IKeyword = Joint.keyword("hour to second");
    public static readonly K_IDENTITY: IKeyword = Joint.keyword("identity");
    public static readonly K_IF: IKeyword = Joint.keyword("if");
    public static readonly K_IF_EXISTS: IKeyword = Joint.keyword("if exists");
    public static readonly K_IF_NOT_EXISTS: IKeyword = Joint.keyword("if not exists");
    public static readonly K_IGNORE: IKeyword = Joint.keyword("ignore");
    public static readonly K_IGNORE_NULLS: IKeyword = Joint.keyword("ignore nulls");
    public static readonly K_IMMEDIATE: IKeyword = Joint.keyword("immediate");
    public static readonly K_IN: IKeyword = Joint.keyword("in");
    public static readonly K_INCLUDE: IKeyword = Joint.keyword("include");
    public static readonly K_INDEX: IKeyword = Joint.keyword("index");
    public static readonly K_INNER_JOIN: IKeyword = Joint.keyword("inner join");
    public static readonly K_INSERT: IKeyword = Joint.keyword("insert");
    public static readonly K_INT: IKeyword = Joint.keyword("int");
    public static readonly K_INTO: IKeyword = Joint.keyword("into");
    public static readonly K_IS: IKeyword = Joint.keyword("is");
    public static readonly K_IS_NOT_NULL: IKeyword = Joint.keyword("is not null");
    public static readonly K_IS_NULL: IKeyword = Joint.keyword("is null");
    public static readonly K_KEEP: IKeyword = Joint.keyword("keep");
    public static readonly K_KEY: IKeyword = Joint.keyword("key");
    public static readonly K_LAST: IKeyword = Joint.keyword("last");
    public static readonly K_LATERAL: IKeyword = Joint.keyword("lateral");
    public static readonly K_LEFT_OUTER_JOIN_LATERAL: IKeyword = Joint.keyword("left outer join lateral");
    public static readonly K_LIKE: IKeyword = Joint.keyword("like");
    public static readonly K_LIKE_REGEX: IKeyword = Joint.keyword("like_regex");
    public static readonly K_LIMIT: IKeyword = Joint.keyword("limit");
    public static readonly K_LOCK_IN_SHARE_MODE: IKeyword = Joint.keyword("lock in share mode");
    public static readonly K_LOOP: IKeyword = Joint.keyword("loop");
    public static readonly K_MATCHED: IKeyword = Joint.keyword("matched");
    public static readonly K_MERGE_INTO: IKeyword = Joint.keyword("merge into");
    public static readonly K_MINUS: IKeyword = Joint.keyword("minus");
    public static readonly K_MODIFY: IKeyword = Joint.keyword("modify");
    public static readonly K_NEW_TABLE: IKeyword = Joint.keyword("new table");
    public static readonly K_NOCYCLE: IKeyword = Joint.keyword("nocycle");
    public static readonly K_NONCLUSTERED: IKeyword = Joint.keyword("nonclustered");
    public static readonly K_NOT: IKeyword = Joint.keyword("not");
    public static readonly K_NOT_ENFORCED: IKeyword = Joint.keyword("not enforced");
    public static readonly K_NOT_EXISTS: IKeyword = Joint.keyword("not exists");
    public static readonly K_NOT_IN: IKeyword = Joint.keyword("not in");
    public static readonly K_NOT_NULL: IKeyword = Joint.keyword("not null");
    public static readonly K_NULL: IKeyword = Joint.keyword("null");
    public static readonly K_NULLS_FIRST: IKeyword = Joint.keyword("nulls first");
    public static readonly K_NULLS_LAST: IKeyword = Joint.keyword("nulls last");
    public static readonly K_NVARCHAR: IKeyword = Joint.keyword("nvarchar");
    public static readonly K_OF: IKeyword = Joint.keyword("of");
    public static readonly K_OFFSET: IKeyword = Joint.keyword("offset");
    public static readonly K_OLD_TABLE: IKeyword = Joint.keyword("old table");
    public static readonly K_ON: IKeyword = Joint.keyword("on");
    public static readonly K_ON_COMMIT_DELETE_ROWS: IKeyword = Joint.keyword("on commit delete rows");
    public static readonly K_ON_COMMIT_DROP: IKeyword = Joint.keyword("on commit drop");
    public static readonly K_ON_COMMIT_PRESERVE_ROWS: IKeyword = Joint.keyword("on commit preserve rows");
    public static readonly K_ON_CONFLICT: IKeyword = Joint.keyword("on conflict");
    public static readonly K_ON_CONSTRAINT: IKeyword = Joint.keyword("on constraint");
    public static readonly K_ON_DELETE: IKeyword = Joint.keyword("on delete");
    public static readonly K_ON_DUPLICATE_KEY_UPDATE: IKeyword = Joint.keyword("on duplicate key update");
    public static readonly K_ON_UPDATE: IKeyword = Joint.keyword("on update");
    public static readonly K_OPEN: IKeyword = Joint.keyword("open");
    public static readonly K_OR: IKeyword = Joint.keyword("or");
    public static readonly K_ORDER: IKeyword = Joint.keyword("order");
    public static readonly K_ORDER_BY: IKeyword = Joint.keyword("order by");
    public static readonly K_OVER: IKeyword = Joint.keyword("over");
    public static readonly K_OVERLAPS: IKeyword = Joint.keyword("overlaps");
    public static readonly K_PARTITION_BY: IKeyword = Joint.keyword("partition by");
    public static readonly K_PASSING: IKeyword = Joint.keyword("passing");
    public static readonly K_PERCENT: IKeyword = Joint.keyword("percent");
    public static readonly K_PIVOT: IKeyword = Joint.keyword("pivot");
    public static readonly K_PRECEDING: IKeyword = Joint.keyword("preceding");
    public static readonly K_PRIMARY_KEY: IKeyword = Joint.keyword("primary key");
    public static readonly K_PRIOR: IKeyword = Joint.keyword("prior");
    public static readonly K_PUBLIC: IKeyword = Joint.keyword("public");
    public static readonly K_RAISE: IKeyword = Joint.keyword("raise");
    public static readonly K_RAISERROR: IKeyword = Joint.keyword("raiserror");
    public static readonly K_RECORD: IKeyword = Joint.keyword("record");
    public static readonly K_RECURSIVE: IKeyword = Joint.keyword("recursive");
    public static readonly K_REFERENCES: IKeyword = Joint.keyword("references");
    public static readonly K_REGEXP: IKeyword = Joint.keyword("regexp");
    public static readonly K_RENAME: IKeyword = Joint.keyword("rename");
    public static readonly K_RENAME_COLUMN: IKeyword = Joint.keyword("rename column");
    public static readonly K_RENAME_CONSTRAINT: IKeyword = Joint.keyword("rename constraint");
    public static readonly K_RENAME_INDEX: IKeyword = Joint.keyword("rename index");
    public static readonly K_RENAME_OBJECT: IKeyword = Joint.keyword("rename object");
    public static readonly K_RENAME_TABLE: IKeyword = Joint.keyword("rename table");
    public static readonly K_RENAME_TO: IKeyword = Joint.keyword("rename to");
    public static readonly K_REPLACE: IKeyword = Joint.keyword("replace");
    public static readonly K_RESPECT_NULLS: IKeyword = Joint.keyword("respect nulls");
    public static readonly K_RESTART: IKeyword = Joint.keyword("restart");
    public static readonly K_RESTART_IDENTITY: IKeyword = Joint.keyword("restart identity");
    public static readonly K_RESTART_WITH: IKeyword = Joint.keyword("restart with");
    public static readonly K_RESTRICT: IKeyword = Joint.keyword("restrict");
    public static readonly K_RETURNING: IKeyword = Joint.keyword("returning");
    public static readonly K_REVOKE: IKeyword = Joint.keyword("revoke");
    public static readonly K_ROW: IKeyword = Joint.keyword("row");
    public static readonly K_ROWCOUNT: IKeyword = Joint.keyword("rowcount");
    public static readonly K_ROWS: IKeyword = Joint.keyword("rows");
    public static readonly K_ROWS_FROM: IKeyword = Joint.keyword("rows from");
    public static readonly K_ROWS_ONLY: IKeyword = Joint.keyword("rows only");
    public static readonly K_ROWS_WITH_TIES: IKeyword = Joint.keyword("rows with ties");
    public static readonly K_SCHEMA: IKeyword = Joint.keyword("schema");
    public static readonly K_SCN: IKeyword = Joint.keyword("scn");
    public static readonly K_SEARCH_PATH: IKeyword = Joint.keyword("search_path");
    public static readonly K_SELECT: IKeyword = Joint.keyword("select");
    public static readonly K_SEPARATOR: IKeyword = Joint.keyword("separator");
    public static readonly K_SEQUENCE: IKeyword = Joint.keyword("sequence");
    public static readonly K_SERIAL: IKeyword = Joint.keyword("serial");
    public static readonly K_SERIAL8: IKeyword = Joint.keyword("serial8");
    public static readonly K_SESSION: IKeyword = Joint.keyword("session");
    public static readonly K_SET: IKeyword = Joint.keyword("set");
    public static readonly K_SET_DATA_TYPE: IKeyword = Joint.keyword("set data type");
    public static readonly K_SET_DEFAULT: IKeyword = Joint.keyword("set default");
    public static readonly K_SET_NOT_NULL: IKeyword = Joint.keyword("set not null");
    public static readonly K_SIBLINGS: IKeyword = Joint.keyword("siblings");
    public static readonly K_SKIP: IKeyword = Joint.keyword("skip");
    public static readonly K_SQL: IKeyword = Joint.keyword("sql");
    public static readonly K_SQLSTATE: IKeyword = Joint.keyword("sqlstate");
    public static readonly K_START_AT: IKeyword = Joint.keyword("start at");
    public static readonly K_START_WITH: IKeyword = Joint.keyword("start with");
    public static readonly K_SWITCH: IKeyword = Joint.keyword("switch");
    public static readonly K_SYMMETRIC: IKeyword = Joint.keyword("symmetric");
    public static readonly K_TABLE: IKeyword = Joint.keyword("table");
    public static readonly K_TEMPORARY: IKeyword = Joint.keyword("temporary");
    public static readonly K_THEN: IKeyword = Joint.keyword("then");
    public static readonly K_THROW: IKeyword = Joint.keyword("throw");
    public static readonly K_TIME: IKeyword = Joint.keyword("time");
    public static readonly K_TIME_WITH_TIME_ZONE: IKeyword = Joint.keyword("time with time zone");
    public static readonly K_TIMESTAMP: IKeyword = Joint.keyword("timestamp");
    public static readonly K_TIMESTAMP_WITH_TIME_ZONE: IKeyword = Joint.keyword("timestamp with time zone");
    public static readonly K_TO: IKeyword = Joint.keyword("to");
    public static readonly K_TOP: IKeyword = Joint.keyword("top");
    public static readonly K_TRIM: IKeyword = Joint.keyword("trim");
    public static readonly K_TRUE: IKeyword = Joint.keyword("true");
    public static readonly K_TRUNCATE_TABLE: IKeyword = Joint.keyword("truncate table");
    public static readonly K_TYPE: IKeyword = Joint.keyword("type");
    public static readonly K_UNBOUNDED_FOLLOWING: IKeyword = Joint.keyword("unbounded following");
    public static readonly K_UNBOUNDED_PRECEDING: IKeyword = Joint.keyword("unbounded preceding");
    public static readonly K_UNIQUE: IKeyword = Joint.keyword("unique");
    public static readonly K_UNNEST: IKeyword = Joint.keyword("unnest");
    public static readonly K_UPDATE: IKeyword = Joint.keyword("update");
    public static readonly K_UPSERT: IKeyword = Joint.keyword("upsert");
    public static readonly K_USE: IKeyword = Joint.keyword("use");
    public static readonly K_USING: IKeyword = Joint.keyword("using");
    public static readonly K_USING_INDEX: IKeyword = Joint.keyword("using index");
    public static readonly K_VALUES: IKeyword = Joint.keyword("values");
    public static readonly K_VARCHAR: IKeyword = Joint.keyword("varchar");
    public static readonly K_VERSIONS_BETWEEN: IKeyword = Joint.keyword("versions between");
    public static readonly K_VIEW: IKeyword = Joint.keyword("view");
    public static readonly K_WHEN: IKeyword = Joint.keyword("when");
    public static readonly K_WHERE: IKeyword = Joint.keyword("where");
    public static readonly K_WINDOW: IKeyword = Joint.keyword("window");
    public static readonly K_WITH: IKeyword = Joint.keyword("with");
    public static readonly K_WITH_CHECK_OPTION: IKeyword = Joint.keyword("with check option");
    public static readonly K_WITH_DATA: IKeyword = Joint.keyword("with data");
    public static readonly K_WITH_GRANT_OPTION: IKeyword = Joint.keyword("with grant option");
    public static readonly K_WITH_LOCK: IKeyword = Joint.keyword("with lock");
    public static readonly K_WITH_NO_DATA: IKeyword = Joint.keyword("with no data");
    public static readonly K_WITH_PRIMARY_KEY: IKeyword = Joint.keyword("with primary key");
    public static readonly K_WITH_READ_ONLY: IKeyword = Joint.keyword("with read only");
    public static readonly K_WITH_ROLLUP: IKeyword = Joint.keyword("with rollup");
    public static readonly K_WITH_TIES: IKeyword = Joint.keyword("with ties");
    public static readonly K_WITHIN_GROUP: IKeyword = Joint.keyword("within group");
    public static readonly K_XMLTABLE: IKeyword = Joint.keyword("xmltable");
    public static readonly K_YEAR_TO_DAY: IKeyword = Joint.keyword("year to day");
    public static readonly K_YEAR_TO_FRACTION: IKeyword = Joint.keyword("year to fraction");
    private constructor() {}
}
